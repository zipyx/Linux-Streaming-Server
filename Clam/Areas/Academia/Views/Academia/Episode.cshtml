@model Clam.Areas.Academia.Models.StreamFileUploadDatabase

@{
    ViewData["Title"] = "Episode";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var Said = ViewBag.Said;
    var Aid = ViewBag.Aid;

    var UrlCategory = ViewBag.UrlCategory;
    var UrlSection = ViewBag.UrlSection;
    var CategoryName = ViewBag.CategoryName;
    var SectionName = ViewBag.SectionName;

}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/academia/manage">Academic Categories</a></li>
        <li class="breadcrumb-item"><a href="/academia/manage/@UrlCategory/list/@Aid">@CategoryName</a></li>
        <li class="breadcrumb-item active" aria-current="page">@SectionName Content</li>
    </ol>
</nav>
<h1>@SectionName</h1>
<caption>@CategoryName</caption>
<hr />
@if ((User.Identity.IsAuthenticated) && ((User.IsInRole("Contributor"))
 || (User.IsInRole("Engineer")) || (User.IsInRole("Developer")) || (User.IsInRole("Admin")) || (User.IsInRole("Owner"))))
{
    <div class="row">
        <div class="col-md-8">
            @using (Html.BeginForm(actionName: "UploadDatabase", controllerName: "Academia", method: FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "AJAXSubmit(this); return false;" }))
            {
                @Html.ValidationSummary(message: "Ensure Field is filled in by specific requirements.", htmlAttributes: new { @class = "text-danger" })
                <div class="form-group row">
                    @Html.LabelFor(model => model.AcademicId, null, new { @class = "col-md-4 col-form-label control-label", @hidden = "hidden" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.AcademicId, null, new { @class = "form-control", @hidden = "hidden" })
                        @Html.ValidationMessageFor(model => model.AcademicId, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.FormFile, null, new { @class = "col-md-4 col-form-label control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.FormFile, null, new { @class = "form-control-file border", @type = "file", @multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.FormFile, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.SubCategoryId, null, new { @class = "col-md-4 col-form-label control-label", @hidden = "hidden" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.SubCategoryId, null, new { @class = "form-control", @hidden = "hidden" })
                        @Html.ValidationMessageFor(model => model.SubCategoryId, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Upload" class="btn btn-primary" onsubmit="reload();" />
                </div>
            }
        </div>
    </div>
}

@*@Html.Partial("EpisodeList")*@
@await Html.PartialAsync("EpisodeList")

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function reload() {
            $(" #auto-load ").load(window.location.href + " #auto-load ");
        }

        function refreshPage() {
            location.reload(true);
        }
    </script>
}
